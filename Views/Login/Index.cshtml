@model LoginModel
@{
    Layout = "_LayoutDeslogada";
    ViewData["Title"] = "Login";
}

    @if (TempData["MensagemErro"] != null)
    {
        <div class="alert alert-danger" role="alert">
            <button type="button" class="btn btn-danger btn-sm close-alert" arial-label="Close">X</button>
            @TempData["MensagemErro"]
        </div>
    }

@if (TempData["MensagemSucesso"] != null)
{
    <div class="alert alert-success" role="alert">
        <button type="button" class="btn btn-danger btn-sm close-alert" arial-label="Close">X</button>
        @TempData["MensagemSucesso"]
    </div>
}


<!-- minha asp-controller vai ser login,
    minha AÇAO de quando ele enviar (clicar em entrar) vai ser para
    a acao entrar, e o metodo que vai seguir é o post.
-->
<form asp-controller="login" asp-action="Entrar" method="post">
  <div class="mb-3">
    <label for="login" class="form-label">Login</label>
    <input type="text" asp-for="Login" class="form-control" id="login">
    @Html.ValidationMessageFor(x => x.Login)
  </div>

  <div class="mb-3">
    <label for="senha" class="form-label">Senha</label>
    <input type="password" asp-for="Senha" class="form-control" id="senha">
        @Html.ValidationMessageFor(x => x.Senha)
</div>

<p class="mb-4 text-sm-center mx-auto">
    Esqueceu a senha?
    <a asp-controller="Login" asp-action="RedefinirSenha" class="text-primary text0f">Redefinir</a>
</p>

  <button type="submit" class="btn btn-primary btn-block">Entrar</button>
</form>